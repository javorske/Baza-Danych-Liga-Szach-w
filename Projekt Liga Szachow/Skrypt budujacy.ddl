-- Generated by Oracle SQL Developer Data Modeler 18.4.0.339.1532
--   at:        2019-06-20 17:28:54 CEST
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g



CREATE TABLE budynek (
    id            INTEGER NOT NULL,
    nazwa         VARCHAR2(20) NOT NULL,
    kompleks_id   INTEGER NOT NULL
);

COMMENT ON TABLE budynek IS
    'Tabela budynek przechowuje informacje o budynku, w którym rozgrywa siê partia szachów.';

ALTER TABLE budynek ADD CONSTRAINT budynek_pk PRIMARY KEY ( id );

CREATE TABLE klub (
    id      INTEGER NOT NULL,
    nazwa   VARCHAR2(30) NOT NULL
);

COMMENT ON TABLE klub IS
    'Tabela przechowuje nazwy polskich klubów szachowych.';

ALTER TABLE klub ADD CONSTRAINT klub_pk PRIMARY KEY ( id );

ALTER TABLE klub ADD CONSTRAINT klub__un UNIQUE ( nazwa );

CREATE TABLE kompleks (
    id                INTEGER NOT NULL,
    numer_w_adresie   INTEGER NOT NULL,
    ulica             VARCHAR2(30) NOT NULL,
    miejscowosc_id    INTEGER NOT NULL,
    nazwa             VARCHAR2(50) NOT NULL
);

COMMENT ON TABLE kompleks IS
    'Kompleks przechowuje informacje o jego adresie.';

ALTER TABLE kompleks ADD CONSTRAINT kompleks_pk PRIMARY KEY ( id );

CREATE TABLE miejscowosc (
    id           INTEGER NOT NULL,
    nazwa        VARCHAR2(30) NOT NULL,
    panstwo_id   INTEGER NOT NULL
);

COMMENT ON TABLE miejscowosc IS
    'Przechowuje nazwy miejscowosci.';

ALTER TABLE miejscowosc ADD CONSTRAINT miasto_pk PRIMARY KEY ( id );

ALTER TABLE miejscowosc ADD CONSTRAINT miejscowosc__un UNIQUE ( nazwa );

CREATE TABLE nagroda (
    id            INTEGER NOT NULL,
    kwota         INTEGER NOT NULL,
    waluta_id     INTEGER NOT NULL,
    rzeczowa_id   INTEGER
);

COMMENT ON TABLE nagroda IS
    'Przechowuje informacje na temat nagrody dla zwyciezców turnieju takie jak rodzaj (pieniezna, rzeczowa) oraz kwote w przypadku pienieznej.'
    ;

ALTER TABLE nagroda ADD CONSTRAINT nagroda_pk PRIMARY KEY ( id );

CREATE TABLE narodowosc (
    id      INTEGER NOT NULL,
    nazwa   VARCHAR2(25) NOT NULL
);

COMMENT ON TABLE narodowosc IS
    'Przechowuje nazwy narodowosci trenerow, sedziow oraz zawodnikow.';

ALTER TABLE narodowosc ADD CONSTRAINT narodowosc_pk PRIMARY KEY ( id );

ALTER TABLE narodowosc ADD CONSTRAINT narodowosc__un UNIQUE ( nazwa );

CREATE TABLE panstwo (
    id      INTEGER NOT NULL,
    nazwa   VARCHAR2(30) NOT NULL
);

COMMENT ON TABLE panstwo IS
    'Przechowuje nazwy panstw.';

ALTER TABLE panstwo ADD CONSTRAINT panstwo_pk PRIMARY KEY ( id );

ALTER TABLE panstwo ADD CONSTRAINT panstwo__un UNIQUE ( nazwa );

CREATE TABLE przedzial_wiekowy (
    id       INTEGER NOT NULL,
    rodzaj   VARCHAR2(6) NOT NULL
);

COMMENT ON TABLE przedzial_wiekowy IS
    'Okresla przedzial wiekowy danej rozgrywki w turnieju.';

ALTER TABLE przedzial_wiekowy ADD CONSTRAINT przedzial_wiekowy_pk PRIMARY KEY ( id );

ALTER TABLE przedzial_wiekowy ADD CONSTRAINT przedzial_wiekowy__un UNIQUE ( rodzaj );

CREATE TABLE rozgrywka (
    id                     INTEGER NOT NULL,
    data                   DATE NOT NULL,
    czy_zakonczona         CHAR(1) NOT NULL,
    sedzia_id              INTEGER NOT NULL,
    przedzial_wiekowy_id   INTEGER NOT NULL,
    sala_numer_sali        INTEGER NOT NULL,
    tryb_rozgrywki_id      INTEGER NOT NULL,
    turniej_id             INTEGER NOT NULL,
    zawodnik_nr1_id        INTEGER NOT NULL,
    zawodnik_nr2_id        INTEGER NOT NULL,
    zwyciezca              INTEGER
);

ALTER TABLE rozgrywka
    ADD CHECK ( czy_zakonczona IN (
        'f',
        't'
    ) );

COMMENT ON TABLE rozgrywka IS
    'Tabela przechowuje informacje dotyczace poszczegolnych rogrywek, takich jak data, czas trwania, kto sedziowal, kto gral i kto wygral. Pole "Czas_trwania" sluzy do okreslenia aktualnego stanu rozgrywki. Tabela ponadto okresla przedzial wiekowy graczy oraz tryb rozgrywki. Turniej_ID okresla, ktorego turnieju dana rozgrywka dotyczy.'
    ;

ALTER TABLE rozgrywka ADD CONSTRAINT rozgrywka_pk PRIMARY KEY ( id );

CREATE TABLE rzeczowa (
    id      INTEGER NOT NULL,
    nazwa   VARCHAR2(30) NOT NULL
);

COMMENT ON TABLE rzeczowa IS
    'Okresla rodzaj nagrody rzeczowej.';

ALTER TABLE rzeczowa ADD CONSTRAINT rzeczowa_pk PRIMARY KEY ( id );

ALTER TABLE rzeczowa ADD CONSTRAINT rzeczowa__un UNIQUE ( nazwa );

CREATE TABLE sala (
    numer_sali    INTEGER NOT NULL,
    litera_sali   VARCHAR2(3),
    budynek_id    INTEGER NOT NULL
);

COMMENT ON TABLE sala IS
    'Okresla numer sali, w ktorej rozgrywaja sie poszczegolne rozgrywki szachowe.';

ALTER TABLE sala ADD CONSTRAINT sala_pk PRIMARY KEY ( numer_sali );

CREATE TABLE sedzia (
    id               INTEGER NOT NULL,
    imie             VARCHAR2(25) NOT NULL,
    nazwisko         VARCHAR2(25) NOT NULL,
    narodowosc_id    INTEGER NOT NULL,
    miejscowosc_id   INTEGER NOT NULL
);

COMMENT ON TABLE sedzia IS
    'Przechowuje informacje na temat wszystkich sedziow takie jak imie, nazwisko, narodowosc oraz miasto zamieszkania.';

ALTER TABLE sedzia ADD CONSTRAINT sedzia_pk PRIMARY KEY ( id );

CREATE TABLE sedzia_turniej (
    sedzia_id    INTEGER NOT NULL,
    turniej_id   INTEGER NOT NULL
);

COMMENT ON TABLE sedzia_turniej IS
    'Tabela posredniczaca, okresla w ktorym turnieju jaki sedzia rozstrzyga gre.';

CREATE TABLE sponsor (
    id               INTEGER NOT NULL,
    nazwa_sponsora   VARCHAR2(40) NOT NULL
);

COMMENT ON TABLE sponsor IS
    'Przechowuje nazwy sponsorow.';

ALTER TABLE sponsor ADD CONSTRAINT sponsor_pk PRIMARY KEY ( id );

ALTER TABLE sponsor ADD CONSTRAINT sponsor__un UNIQUE ( nazwa_sponsora );

CREATE TABLE trener (
    id               INTEGER NOT NULL,
    imie             VARCHAR2(25) NOT NULL,
    nazwisko         VARCHAR2(25) NOT NULL,
    miejscowosc_id   INTEGER NOT NULL,
    klub_id          INTEGER NOT NULL,
    narodowosc_id    INTEGER NOT NULL
);

COMMENT ON TABLE trener IS
    'Przechowuje informacje na temat trenerow, takie jak imie, nazwisko, miasto zamieszkania, narodowosc oraz prznaleznosc do klubu.'
    ;

ALTER TABLE trener ADD CONSTRAINT trener_pk PRIMARY KEY ( id );

CREATE TABLE tryb_rozgrywki (
    id      INTEGER NOT NULL,
    nazwa   VARCHAR2(20) NOT NULL
);

COMMENT ON TABLE tryb_rozgrywki IS
    'Okresla tryb rozgrywki szachowej, np "szachy blyskawiczne".';

ALTER TABLE tryb_rozgrywki ADD CONSTRAINT tryb_rozgrywki_pk PRIMARY KEY ( id );

ALTER TABLE tryb_rozgrywki ADD CONSTRAINT tryb_rozgrywki__un UNIQUE ( nazwa );

CREATE TABLE turniej (
    id            INTEGER NOT NULL,
    nazwa         VARCHAR2(30) NOT NULL,
    rozpoczecie   DATE NOT NULL,
    zakonczenie   DATE
);

COMMENT ON TABLE turniej IS
    'Przechowuje informacje na temat turniejow, takie jak data rozpoczecia oraz zakonczenia (jezeli turniej nadal trwa, w polu Zakonczenie domyslnie podany jest "turniej nadal trwa".'
    ;

ALTER TABLE turniej ADD CONSTRAINT turniej_pk PRIMARY KEY ( id );

ALTER TABLE turniej ADD CONSTRAINT turniej__un UNIQUE ( nazwa );

CREATE TABLE turniej_kompleks (
    turniej_id    INTEGER NOT NULL,
    kompleks_id   INTEGER NOT NULL
);

COMMENT ON TABLE turniej_kompleks IS
    'Tabela posredniczaca, przechowujaca informacje o tym, gdzie dany turniej sie rozgrywa.';

CREATE TABLE turniej_nagroda (
    turniej_id   INTEGER NOT NULL,
    nagroda_id   INTEGER NOT NULL
);

COMMENT ON TABLE turniej_nagroda IS
    'Kolumna poœrednicz¹ca pomiedzy tabela turniej a nagroda.';

CREATE TABLE turniej_sponsor (
    turniej_id   INTEGER NOT NULL,
    sponsor_id   INTEGER NOT NULL
);

COMMENT ON TABLE turniej_sponsor IS
    'Tabela posredniczaca okreslajaca kto sponsoruje dany turniej. Jeden turniej moze byc sponsorowany przez wielu sponsorow, oraz jeden sponsor moze sponsorowac wiele turniejow.'
    ;

CREATE TABLE turniej_zawodnik (
    turniej_id    INTEGER NOT NULL,
    zawodnik_id   INTEGER NOT NULL
);

COMMENT ON TABLE turniej_zawodnik IS
    'Tabela posredniczaca, okresla, w ktorych turniejach brali udzial poszczegolni zawodnicy.';

CREATE TABLE tytul_szachowy (
    id      INTEGER NOT NULL,
    tytul   VARCHAR2(30) NOT NULL
);

COMMENT ON TABLE tytul_szachowy IS
    'Przechowuje informacje na temat tytulow szachowych.';

ALTER TABLE tytul_szachowy ADD CONSTRAINT tytul_szachowy_pk PRIMARY KEY ( id );

ALTER TABLE tytul_szachowy ADD CONSTRAINT tytul_szachowy__un UNIQUE ( tytul );

CREATE TABLE waluta (
    id      INTEGER NOT NULL,
    nazwa   VARCHAR2(7) NOT NULL
);

COMMENT ON TABLE waluta IS
    'Przechowuje nazwy roznych walut.';

ALTER TABLE waluta ADD CONSTRAINT waluta_pk PRIMARY KEY ( id );

ALTER TABLE waluta ADD CONSTRAINT waluta__un UNIQUE ( nazwa );

CREATE TABLE zawodnik (
    id                  INTEGER NOT NULL,
    imie                VARCHAR2(25) NOT NULL,
    nazwisko            VARCHAR2(25) NOT NULL,
    data_urodzenia      DATE NOT NULL,
    klub_id             INTEGER NOT NULL,
    tytul_szachowy_id   INTEGER DEFAULT 1,
    miejscowosc_id      INTEGER NOT NULL,
    narodowosc_id       INTEGER NOT NULL
);

COMMENT ON TABLE zawodnik IS
    'Przechowuje informacje na temat zawodnikow takie jak imie, nazwisko, data urodzenia, tytul szachowy, przynaleznosc do klubu oraz miejsce zamieszkania.'
    ;

ALTER TABLE zawodnik ADD CONSTRAINT zawodnik_pk PRIMARY KEY ( id );

ALTER TABLE sala
    ADD CONSTRAINT budynek FOREIGN KEY ( budynek_id )
        REFERENCES budynek ( id );

ALTER TABLE trener
    ADD CONSTRAINT klub FOREIGN KEY ( klub_id )
        REFERENCES klub ( id );

ALTER TABLE zawodnik
    ADD CONSTRAINT klubv2 FOREIGN KEY ( klub_id )
        REFERENCES klub ( id );

ALTER TABLE budynek
    ADD CONSTRAINT kompleks FOREIGN KEY ( kompleks_id )
        REFERENCES kompleks ( id );

ALTER TABLE kompleks
    ADD CONSTRAINT kompleks_miejscowosc_fk FOREIGN KEY ( miejscowosc_id )
        REFERENCES miejscowosc ( id );

ALTER TABLE trener
    ADD CONSTRAINT miejscowosc FOREIGN KEY ( miejscowosc_id )
        REFERENCES miejscowosc ( id );

ALTER TABLE zawodnik
    ADD CONSTRAINT miejscowoscv2 FOREIGN KEY ( miejscowosc_id )
        REFERENCES miejscowosc ( id );

ALTER TABLE sedzia
    ADD CONSTRAINT miejscowoscv3 FOREIGN KEY ( miejscowosc_id )
        REFERENCES miejscowosc ( id );

ALTER TABLE nagroda
    ADD CONSTRAINT nagroda_rzeczowa_fk FOREIGN KEY ( rzeczowa_id )
        REFERENCES rzeczowa ( id );

ALTER TABLE nagroda
    ADD CONSTRAINT nagroda_waluta_fk FOREIGN KEY ( waluta_id )
        REFERENCES waluta ( id );

ALTER TABLE turniej_nagroda
    ADD CONSTRAINT nagrodav2_nagroda_fk FOREIGN KEY ( nagroda_id )
        REFERENCES nagroda ( id );

ALTER TABLE turniej_nagroda
    ADD CONSTRAINT nagrodav2_turniej_fk FOREIGN KEY ( turniej_id )
        REFERENCES turniej ( id );

ALTER TABLE zawodnik
    ADD CONSTRAINT narodowoscv2 FOREIGN KEY ( narodowosc_id )
        REFERENCES narodowosc ( id );

ALTER TABLE sedzia
    ADD CONSTRAINT narodowoscv3 FOREIGN KEY ( narodowosc_id )
        REFERENCES narodowosc ( id );

ALTER TABLE miejscowosc
    ADD CONSTRAINT panstwo FOREIGN KEY ( panstwo_id )
        REFERENCES panstwo ( id );

ALTER TABLE rozgrywka
    ADD CONSTRAINT przedzial_wiekowy FOREIGN KEY ( przedzial_wiekowy_id )
        REFERENCES przedzial_wiekowy ( id );

ALTER TABLE rozgrywka
    ADD CONSTRAINT rozgrywka_zawodnik_fk FOREIGN KEY ( zawodnik_nr1_id )
        REFERENCES zawodnik ( id );

ALTER TABLE rozgrywka
    ADD CONSTRAINT rozgrywka_zawodnik_fkv2 FOREIGN KEY ( zawodnik_nr2_id )
        REFERENCES zawodnik ( id );

ALTER TABLE rozgrywka
    ADD CONSTRAINT rozgrywka_zawodnik_fkv3 FOREIGN KEY ( zwyciezca )
        REFERENCES zawodnik ( id );

ALTER TABLE rozgrywka
    ADD CONSTRAINT sala FOREIGN KEY ( sala_numer_sali )
        REFERENCES sala ( numer_sali );

ALTER TABLE rozgrywka
    ADD CONSTRAINT sedzia FOREIGN KEY ( sedzia_id )
        REFERENCES sedzia ( id );

ALTER TABLE sedzia_turniej
    ADD CONSTRAINT sedzia_turniej_sedzia_fk FOREIGN KEY ( sedzia_id )
        REFERENCES sedzia ( id );

ALTER TABLE sedzia_turniej
    ADD CONSTRAINT sedzia_turniej_turniej_fk FOREIGN KEY ( turniej_id )
        REFERENCES turniej ( id );

ALTER TABLE trener
    ADD CONSTRAINT trener_narodowosc_fk FOREIGN KEY ( narodowosc_id )
        REFERENCES narodowosc ( id );

ALTER TABLE rozgrywka
    ADD CONSTRAINT tryb_rozgrywki FOREIGN KEY ( tryb_rozgrywki_id )
        REFERENCES tryb_rozgrywki ( id );

ALTER TABLE rozgrywka
    ADD CONSTRAINT turniej FOREIGN KEY ( turniej_id )
        REFERENCES turniej ( id );

ALTER TABLE turniej_kompleks
    ADD CONSTRAINT turniej_kompleks_kompleks_fk FOREIGN KEY ( kompleks_id )
        REFERENCES kompleks ( id );

ALTER TABLE turniej_kompleks
    ADD CONSTRAINT turniej_kompleks_turniej_fk FOREIGN KEY ( turniej_id )
        REFERENCES turniej ( id );

ALTER TABLE turniej_sponsor
    ADD CONSTRAINT turniej_sponsor_fk FOREIGN KEY ( sponsor_id )
        REFERENCES sponsor ( id );

ALTER TABLE turniej_sponsor
    ADD CONSTRAINT turniej_sponsor_turniej_fk FOREIGN KEY ( turniej_id )
        REFERENCES turniej ( id );

ALTER TABLE turniej_zawodnik
    ADD CONSTRAINT turniej_zawodnik_turniej_fk FOREIGN KEY ( turniej_id )
        REFERENCES turniej ( id );

ALTER TABLE turniej_zawodnik
    ADD CONSTRAINT turniej_zawodnik_zawodnik_fk FOREIGN KEY ( zawodnik_id )
        REFERENCES zawodnik ( id );

ALTER TABLE zawodnik
    ADD CONSTRAINT tytul_szachowy FOREIGN KEY ( tytul_szachowy_id )
        REFERENCES tytul_szachowy ( id );

CREATE SEQUENCE budynek_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER budynek_id_trg BEFORE
    INSERT ON budynek
    FOR EACH ROW
    WHEN ( new.id IS NULL )
BEGIN
    :new.id := budynek_id_seq.nextval;
END;
/

CREATE SEQUENCE klub_id_seq START WITH 1 MINVALUE 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER klub_id_trg BEFORE
    INSERT ON klub
    FOR EACH ROW
    WHEN ( new.id IS NULL )
BEGIN
    :new.id := klub_id_seq.nextval;
END;
/

CREATE SEQUENCE kompleks_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER kompleks_id_trg BEFORE
    INSERT ON kompleks
    FOR EACH ROW
    WHEN ( new.id IS NULL )
BEGIN
    :new.id := kompleks_id_seq.nextval;
END;
/

CREATE SEQUENCE miejscowosc_id_seq START WITH 1 MINVALUE 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER miejscowosc_id_trg BEFORE
    INSERT ON miejscowosc
    FOR EACH ROW
    WHEN ( new.id IS NULL )
BEGIN
    :new.id := miejscowosc_id_seq.nextval;
END;
/

CREATE SEQUENCE nagroda_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER nagroda_id_trg BEFORE
    INSERT ON nagroda
    FOR EACH ROW
    WHEN ( new.id IS NULL )
BEGIN
    :new.id := nagroda_id_seq.nextval;
END;
/

CREATE SEQUENCE narodowosc_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER narodowosc_id_trg BEFORE
    INSERT ON narodowosc
    FOR EACH ROW
    WHEN ( new.id IS NULL )
BEGIN
    :new.id := narodowosc_id_seq.nextval;
END;
/

CREATE SEQUENCE panstwo_id_seq START WITH 1 MINVALUE 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER panstwo_id_trg BEFORE
    INSERT ON panstwo
    FOR EACH ROW
    WHEN ( new.id IS NULL )
BEGIN
    :new.id := panstwo_id_seq.nextval;
END;
/

CREATE SEQUENCE przedzial_wiekowy_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER przedzial_wiekowy_id_trg BEFORE
    INSERT ON przedzial_wiekowy
    FOR EACH ROW
    WHEN ( new.id IS NULL )
BEGIN
    :new.id := przedzial_wiekowy_id_seq.nextval;
END;
/

CREATE SEQUENCE rozgrywka_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER rozgrywka_id_trg BEFORE
    INSERT ON rozgrywka
    FOR EACH ROW
    WHEN ( new.id IS NULL )
BEGIN
    :new.id := rozgrywka_id_seq.nextval;
END;
/

CREATE SEQUENCE rzeczowa_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER rzeczowa_id_trg BEFORE
    INSERT ON rzeczowa
    FOR EACH ROW
    WHEN ( new.id IS NULL )
BEGIN
    :new.id := rzeczowa_id_seq.nextval;
END;
/

CREATE SEQUENCE sala_numer_sali_seq START WITH 1 MINVALUE 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER sala_numer_sali_trg BEFORE
    INSERT ON sala
    FOR EACH ROW
    WHEN ( new.numer_sali IS NULL )
BEGIN
    :new.numer_sali := sala_numer_sali_seq.nextval;
END;
/

CREATE SEQUENCE sedzia_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER sedzia_id_trg BEFORE
    INSERT ON sedzia
    FOR EACH ROW
    WHEN ( new.id IS NULL )
BEGIN
    :new.id := sedzia_id_seq.nextval;
END;
/

CREATE SEQUENCE sponsor_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER sponsor_id_trg BEFORE
    INSERT ON sponsor
    FOR EACH ROW
    WHEN ( new.id IS NULL )
BEGIN
    :new.id := sponsor_id_seq.nextval;
END;
/

CREATE SEQUENCE trener_id_seq START WITH 1 MINVALUE 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER trener_id_trg BEFORE
    INSERT ON trener
    FOR EACH ROW
    WHEN ( new.id IS NULL )
BEGIN
    :new.id := trener_id_seq.nextval;
END;
/

CREATE SEQUENCE tryb_rozgrywki_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER tryb_rozgrywki_id_trg BEFORE
    INSERT ON tryb_rozgrywki
    FOR EACH ROW
    WHEN ( new.id IS NULL )
BEGIN
    :new.id := tryb_rozgrywki_id_seq.nextval;
END;
/

CREATE SEQUENCE turniej_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER turniej_id_trg BEFORE
    INSERT ON turniej
    FOR EACH ROW
    WHEN ( new.id IS NULL )
BEGIN
    :new.id := turniej_id_seq.nextval;
END;
/

CREATE SEQUENCE tytul_szachowy_id_seq START WITH 1 MINVALUE 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER tytul_szachowy_id_trg BEFORE
    INSERT ON tytul_szachowy
    FOR EACH ROW
    WHEN ( new.id IS NULL )
BEGIN
    :new.id := tytul_szachowy_id_seq.nextval;
END;
/

CREATE SEQUENCE waluta_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER waluta_id_trg BEFORE
    INSERT ON waluta
    FOR EACH ROW
    WHEN ( new.id IS NULL )
BEGIN
    :new.id := waluta_id_seq.nextval;
END;
/

CREATE SEQUENCE zawodnik_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER zawodnik_id_trg BEFORE
    INSERT ON zawodnik
    FOR EACH ROW
    WHEN ( new.id IS NULL )
BEGIN
    :new.id := zawodnik_id_seq.nextval;
END;
/



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            24
-- CREATE INDEX                             0
-- ALTER TABLE                             64
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                          19
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                         19
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
